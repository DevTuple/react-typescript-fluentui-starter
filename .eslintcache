[{"/Users/nashokkumarbabu/Documents/workspaces/officework/projectrepoview/metahub/client/metahub/src/index.tsx":"1","/Users/nashokkumarbabu/Documents/workspaces/officework/projectrepoview/metahub/client/metahub/src/reportWebVitals.ts":"2","/Users/nashokkumarbabu/Documents/workspaces/officework/projectrepoview/metahub/client/metahub/src/components/Cards.tsx":"3","/Users/nashokkumarbabu/Documents/workspaces/officework/projectrepoview/metahub/client/metahub/src/components/EntityListComponent.tsx":"4","/Users/nashokkumarbabu/Documents/workspaces/officework/projectrepoview/metahub/client/metahub/src/pages/Entities.tsx":"5","/Users/nashokkumarbabu/Documents/workspaces/officework/projectrepoview/metahub/client/metahub/src/layout/Home.tsx":"6","/Users/nashokkumarbabu/Documents/workspaces/officework/projectrepoview/metahub/client/metahub/src/store/index.ts":"7","/Users/nashokkumarbabu/Documents/workspaces/officework/projectrepoview/metahub/client/metahub/src/layout/components/Header.tsx":"8","/Users/nashokkumarbabu/Documents/workspaces/officework/projectrepoview/metahub/client/metahub/src/layout/components/Navigation.tsx":"9","/Users/nashokkumarbabu/Documents/workspaces/officework/projectrepoview/metahub/client/metahub/src/components/shared/MainPanelStyles.tsx":"10"},{"size":773,"mtime":1609402233300,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1609266456266,"results":"13","hashOfConfig":"12"},{"size":2023,"mtime":1609326703121,"results":"14","hashOfConfig":"12"},{"size":1786,"mtime":1609326842569,"results":"15","hashOfConfig":"12"},{"size":3897,"mtime":1609670529509,"results":"16","hashOfConfig":"12"},{"size":4076,"mtime":1609670531005,"results":"17","hashOfConfig":"12"},{"size":698,"mtime":1609402116081,"results":"18","hashOfConfig":"12"},{"size":3360,"mtime":1609400525236,"results":"19","hashOfConfig":"12"},{"size":2480,"mtime":1609400526141,"results":"20","hashOfConfig":"12"},{"size":305,"mtime":1609319623114,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1iej2xv",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nashokkumarbabu/Documents/workspaces/officework/projectrepoview/metahub/client/metahub/src/index.tsx",["46","47"],"/Users/nashokkumarbabu/Documents/workspaces/officework/projectrepoview/metahub/client/metahub/src/reportWebVitals.ts",[],["48","49"],"/Users/nashokkumarbabu/Documents/workspaces/officework/projectrepoview/metahub/client/metahub/src/components/Cards.tsx",["50"],"import React from 'react';\nimport { Text, initializeIcons } from '@fluentui/react';\nimport { Card } from '@uifabric/react-cards';\nimport 'office-ui-fabric-react/dist/css/fabric.css';\n\n\nconst container = {\n  display: 'flex',\n  justifyContent: 'center',\n  margin: '10vh 0',\n};\n\nconst icon = {\n  fontSize: 24,\n  padding: 15,\n  verticalAlign: 'middle',\n  paddingLeft: 0,\n  color: '#0078d4'\n}\n\nconst styles = {\n  cardStyles: {\n    root: {\n      background: 'white',\n      padding: 20,\n      borderTop: '5px solid #0078d4',\n      width: '90%',\n      maxWidth: '90%',\n      margin: 'auto',\n    }\n  },\n  header: {\n    root: {\n      fontSize: 20,\n      fontWeight: 'bold',\n    }\n  },\n  amount: {\n    root: {\n      fontSize: 26,\n      paddingBottom: 20,\n      paddingTop: 30,\n    }\n  },\n  percentage: {\n    root: {\n      fontSize: 16,\n      fontWeight: 'bold',\n      color: '#0078d4',\n    }\n  }\n};\n\nconst cards = [\n  {\n    title: 'Current Balance',\n    amount: '$21 837',\n    icon: 'Money',\n    percentage: '2.3',\n  },\n  {\n    title: 'Current Expanses',\n    amount: '$10 927',\n    icon: 'PaymentCard',\n    percentage: '0.3'\n  },\n  {\n    title: 'Current Income',\n    amount: '$15 093',\n    icon: 'Savings',\n    percentage: '1.3'\n  }\n]\n\nconst CardsSection = () => {\n  initializeIcons();\n  return (\n    <div style={container}>\n      {cards.map((card,index) => (\n        <div className=\"s-Grid-col ms-sm3 ms-xl3\" key={index}>\n          <Card styles={styles.cardStyles} >\n            <Card.Section>\n              <Card.Item >\n                \n                <Text styles={styles.header}>{card.title}</Text>\n              </Card.Item>\n              <Card.Item>\n                <Text styles={styles.amount}>{card.amount}</Text>\n              </Card.Item>\n              <Card.Item>\n                <Text styles={styles.percentage}>\n                  {card.percentage} %\n                </Text>\n              </Card.Item>\n            </Card.Section>\n          </Card>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CardsSection;","/Users/nashokkumarbabu/Documents/workspaces/officework/projectrepoview/metahub/client/metahub/src/components/EntityListComponent.tsx",["51"],"import React from 'react';\nimport { Text, initializeIcons } from '@fluentui/react';\nimport { Card } from '@uifabric/react-cards';\nimport 'office-ui-fabric-react/dist/css/fabric.css';\n\n\nconst container = {\n  display: 'flex',\n  justifyContent: 'center',\n  margin: '10vh 0',\n};\n\nconst icon = {\n  fontSize: 24,\n  padding: 15,\n  verticalAlign: 'middle',\n  paddingLeft: 0,\n  color: '#0078d4'\n}\n\nconst styles = {\n  cardStyles: {\n    root: {\n      background: 'white',\n      padding: 20,\n      borderTop: '5px solid #0078d4',\n      width: '90%',\n      maxWidth: '90%',\n      margin: 'auto',\n    }\n  },\n  header: {\n    root: {\n      fontSize: 20,\n      fontWeight: 'bold',\n    }\n  },\n  amount: {\n    root: {\n      fontSize: 26,\n      paddingBottom: 20,\n      paddingTop: 30,\n    }\n  },\n  percentage: {\n    root: {\n      fontSize: 16,\n      fontWeight: 'bold',\n      color: '#0078d4',\n    }\n  }\n};\n\nconst entities = [\n  {\n    title: 'Entity Balance',\n    amount: '$ 837',\n    icon: 'Money',\n    percentage: '2.3',\n  },\n  {\n    title: 'Entity Expanses',\n    amount: '$ 927',\n    icon: 'PaymentCard',\n    percentage: '0.3'\n  }\n]\n\nconst EntityListComponent = () => {\n  initializeIcons();\n  return (\n    <div style={container}>\n      {entities.map((entity,index) => (\n        <div className=\"s-Grid-col ms-sm3 ms-xl3\" key={index}>\n          <Card styles={styles.cardStyles}>\n            <Card.Section>\n              <Card.Item>\n                \n                <Text styles={styles.header}>{entity.title}</Text>\n              </Card.Item>\n              <Card.Item>\n                <Text styles={styles.amount}>{entity.amount}</Text>\n              </Card.Item>\n             \n            </Card.Section>\n          </Card>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default EntityListComponent;",["52","53"],"/Users/nashokkumarbabu/Documents/workspaces/officework/projectrepoview/metahub/client/metahub/src/pages/Entities.tsx",["54","55","56","57"],"/Users/nashokkumarbabu/Documents/workspaces/officework/projectrepoview/metahub/client/metahub/src/layout/Home.tsx",["58","59","60"],"/Users/nashokkumarbabu/Documents/workspaces/officework/projectrepoview/metahub/client/metahub/src/store/index.ts",["61","62"],"/Users/nashokkumarbabu/Documents/workspaces/officework/projectrepoview/metahub/client/metahub/src/layout/components/Header.tsx",["63","64","65","66","67","68"],"/Users/nashokkumarbabu/Documents/workspaces/officework/projectrepoview/metahub/client/metahub/src/layout/components/Navigation.tsx",["69","70","71"],"/Users/nashokkumarbabu/Documents/workspaces/officework/projectrepoview/metahub/client/metahub/src/components/shared/MainPanelStyles.tsx",[],{"ruleId":"72","severity":1,"message":"73","line":4,"column":8,"nodeType":"74","messageId":"75","endLine":4,"endColumn":11},{"ruleId":"72","severity":1,"message":"76","line":7,"column":25,"nodeType":"74","messageId":"75","endLine":7,"endColumn":35},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"72","severity":1,"message":"81","line":13,"column":7,"nodeType":"74","messageId":"75","endLine":13,"endColumn":11},{"ruleId":"72","severity":1,"message":"81","line":13,"column":7,"nodeType":"74","messageId":"75","endLine":13,"endColumn":11},{"ruleId":"77","replacedBy":"82"},{"ruleId":"79","replacedBy":"83"},{"ruleId":"72","severity":1,"message":"84","line":6,"column":3,"nodeType":"74","messageId":"75","endLine":6,"endColumn":14},{"ruleId":"72","severity":1,"message":"85","line":14,"column":10,"nodeType":"74","messageId":"75","endLine":14,"endColumn":20},{"ruleId":"72","severity":1,"message":"86","line":20,"column":10,"nodeType":"74","messageId":"75","endLine":20,"endColumn":14},{"ruleId":"72","severity":1,"message":"87","line":24,"column":8,"nodeType":"74","messageId":"75","endLine":24,"endColumn":20},{"ruleId":"72","severity":1,"message":"84","line":6,"column":3,"nodeType":"74","messageId":"75","endLine":6,"endColumn":14},{"ruleId":"72","severity":1,"message":"85","line":14,"column":10,"nodeType":"74","messageId":"75","endLine":14,"endColumn":20},{"ruleId":"72","severity":1,"message":"86","line":20,"column":10,"nodeType":"74","messageId":"75","endLine":20,"endColumn":14},{"ruleId":"72","severity":1,"message":"88","line":1,"column":44,"nodeType":"74","messageId":"75","endLine":1,"endColumn":51},{"ruleId":"89","severity":1,"message":"90","line":6,"column":1,"nodeType":"91","endLine":32,"endColumn":3},{"ruleId":"72","severity":1,"message":"92","line":3,"column":23,"nodeType":"74","messageId":"75","endLine":3,"endColumn":37},{"ruleId":"72","severity":1,"message":"93","line":18,"column":7,"nodeType":"74","messageId":"75","endLine":18,"endColumn":27},{"ruleId":"72","severity":1,"message":"94","line":22,"column":7,"nodeType":"74","messageId":"75","endLine":22,"endColumn":24},{"ruleId":"72","severity":1,"message":"95","line":53,"column":7,"nodeType":"74","messageId":"75","endLine":53,"endColumn":20},{"ruleId":"72","severity":1,"message":"96","line":65,"column":7,"nodeType":"74","messageId":"75","endLine":65,"endColumn":21},{"ruleId":"97","severity":1,"message":"98","line":111,"column":13,"nodeType":"99","endLine":111,"endColumn":121},{"ruleId":"72","severity":1,"message":"100","line":3,"column":22,"nodeType":"74","messageId":"75","endLine":3,"endColumn":28},{"ruleId":"72","severity":1,"message":"101","line":3,"column":30,"nodeType":"74","messageId":"75","endLine":3,"endColumn":35},{"ruleId":"72","severity":1,"message":"102","line":4,"column":9,"nodeType":"74","messageId":"75","endLine":4,"endColumn":17},"@typescript-eslint/no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'HashRouter' is defined but never used.","no-native-reassign",["103"],"no-negated-in-lhs",["104"],"'icon' is assigned a value but never used.",["103"],["104"],"'FabricSlots' is defined but never used.","'IconButton' is defined but never used.","'Text' is defined but never used.","'CardsSection' is defined but never used.","'compose' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'ThemeGenerator' is defined but never used.","'outputPanelClassName' is assigned a value but never used.","'textAreaClassName' is assigned a value but never used.","'codepenHeader' is assigned a value but never used.","'codepenSamples' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Switch' is defined but never used.","'Route' is defined but never used.","'Entities' is defined but never used.","no-global-assign","no-unsafe-negation"]